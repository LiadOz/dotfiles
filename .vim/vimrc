filetype off
set encoding=utf-8
scriptencoding utf-8

call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/seoul256.vim'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
Plug 'christoomey/vim-tmux-navigator'
Plug 'https://github.com/dracula/vim'
Plug 'https://github.com/rafi/awesome-vim-colorschemes'
Plug 'her/central.vim'

Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'Shougo/deoplete-clangx'
Plug 'vim-syntastic/syntastic'
Plug 'octol/vim-cpp-enhanced-highlight'
" r plugins
Plug 'jalvesaq/Nvim-R'
call plug#end()
let g:deoplete#enable_at_startup = 1

filetype plugin indent on
syntax on
set tabstop=4
set autowrite
set shiftwidth=4
set expandtab
colo focuspoint

" syntastic settings
" ================================================
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" ================================================

" File backups
" ================================================
set backupdir=$HOME/.vbackup/backup//
set directory=$HOME/.vbackup/swap//
set undodir=$HOME/.vbackup/undo//
set backup swapfile undofile
" ================================================

set ignorecase
inoremap jk <Esc>
inoremap kj <Esc>
inoremap JK <Esc>
inoremap KJ <Esc>
set number relativenumber
let g:NERDTreeChDirMode = 2 "Making the chosen directory become the cwd VERY IMPORTANT!!!!
let g:NERDTreeIgnore=['\.o$']
":colo base16-oceanicnext "other good candidates from base16: flat, google-dark, harmonic-dark
set updatetime=100 " vims update time influences GitGutter
set noshowmode " made redundent by lightline

set laststatus=2

let g:lightline = {
	\ 'component': {
	\   'lineinfo': ' %3l:%-2v',
	\ },
	\ 'component_function': {
	\   'readonly': 'LightlineReadonly',
	\   'fugitive': 'LightlineFugitive'
	\ },
	\ 'colorscheme': 'default',
	\ 'active': {
	\   'left': [ [ 'mode', 'paste' ], [ 'fugitive', 'readonly', 'filename', 'modified' ], [ 'statuslinetabs' ]],
	\ },
    \ 'component_expand': {
    \   'statuslinetabs': 'LightlineStatuslineTabs',
    \ },
    \ }
"separator 'right': '' 'right': ''
" 'separator': { 'left': '' ,'right': ''},
" 'subseparator': { 'left': '' ,'right': ''},

" Setting tabs in lightline
set showtabline=0
function! LightlineStatuslineTabs() abort
  return join(map(range(1, tabpagenr('$')),
        \ '(v:val == tabpagenr() ? "[*] " : "") . lightline#tab#filename(v:val)'), " | ")
endfunction"
function! LightlineReadonly()
	return &readonly ? '' : ''
endfunction
function! LightlineFugitive()
	if exists('*fugitive#head')
		let branch = fugitive#head()
		return branch !=# '' ? ' '.branch : ''
	endif
	return ''
endfunction

let s:palette = g:lightline#colorscheme#{g:lightline.colorscheme}#palette
let s:palette.normal.middle = [ [ 'NONE', 'NONE', 'NONE', 'NONE' ] ]
let s:palette.inactive.middle = s:palette.normal.middle
let s:palette.tabline.middle = s:palette.normal.middle

" need to install fonts help here https://medium.com/@slmeng/how-to-install-powerline-fonts-in-windows-b2eedecace58

map <F6> :NERDTreeToggle<CR>
" Exit NERDTree if it is the last window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <F9> :w !python %<CR>
map <F10> :!python -i %<CR>
autocmd VimEnter * :GitGutterEnable
autocmd GUIEnter * silent! WToggleClean " Fixes screen size dll made with cmake wimproved1 module
"autocmd VimEnter * NERDTree
au GUIEnter * simalt ~x "start maximized


"pymode
let g:pymode = 1
let g:pymode_paths = []
let g:pymode_trim_whitespaces = 1
let g:pymode_options = 1
let g:pymode_options_max_line_length = 79
let g:pymode_options_colorcolumn = 1
let g:pymode_quickfix_minheight = 3
let g:pymode_quickfix_maxheight = 6
let g:pymode_preview_height = &previewheight
let g:pymode_preview_position = 'botright'
let g:pymode_python = 'python3'
let g:pymode_indent = 1
let g:pymode_folding = 0
let g:pymode_motion = 1
let g:pymode_doc = 1
let g:pymode_doc_bind = 'K'
let g:pymode_virtualenv = 1
let g:pymode_run = 1
let g:pymode_run_bind = '<leader>r'
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_bind = '<leader>b'
let g:pymode_lint = 1
let g:pymode_lint_on_write = 1
let g:pymode_lint_message = 1
let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'mccabe']
let g:pymode_rope = 1
let g:pymode_rope_lookup_project = 0
set completeopt=menuone,noinsert
let g:pymode_rope_completion = 1
let g:pymode_rope_complete_on_dot = 1
let g:pymode_rope_completion_bind = '<C-Space>'
"skippped 4.3 just cause
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_print_as_function = 0
let g:pymode_syntax_highlight_equal_operator = g:pymode_syntax_all
let g:pymode_syntax_highlight_stars_operator = g:pymode_syntax_all
let g:pymode_syntax_highlight_self = g:pymode_syntax_all
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all
let g:pymode_syntax_string_formatting = g:pymode_syntax_all
let g:pymode_syntax_string_format = g:pymode_syntax_all
let g:pymode_syntax_string_templates = g:pymode_syntax_all
let g:pymode_syntax_builtin_objs = g:pymode_syntax_all
let g:pymode_syntax_builtin_types = g:pymode_syntax_all
let g:pymode_syntax_highlight_exceptions = g:pymode_syntax_all
let g:pymode_syntax_docstrings = g:pymode_syntax_all
let g:pymode_syntax_doctests = g:pymode_syntax_all
